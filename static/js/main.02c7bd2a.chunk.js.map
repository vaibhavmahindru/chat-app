{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messageRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","dummy","useRef","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","props","messageClass","className","src","alt","App","useAuthState","userLoggedIn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PASAA,IAASC,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,iCACZE,UAAWF,iBACXG,cAAeH,+BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKjB,IAAMO,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAkB3B,SAASC,IAMP,OACE,wBAAQC,QANe,WACvB,IAAMC,EAAW,IAAId,IAASU,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAIrB,iCAIJ,SAASG,IACP,OAAOP,EAAKQ,aACV,wBAAQL,QAAS,kBAAMH,EAAKS,WAA5B,sBAIJ,SAASC,IACP,IAAMC,EAAaV,EAAUW,WAAW,YAClCC,EAAQF,EAAWG,QAAQ,aAAaC,MAAM,IAEpD,EAAmBC,YAAkBH,EAAQ,CAACI,QAAU,OAAjDC,EAAP,oBAGA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAQC,mBACRC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAElBD,EAAEE,iBAFgB,EAGM3B,EAAKQ,YAAtBoB,EAHW,EAGXA,IAAKC,EAHM,EAGNA,SAHM,SAKZlB,EAAWmB,IAAI,CACnBC,KAAMX,EACNY,UAAW1C,IAASW,UAAUgC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBR,EAAa,IAEbC,EAAMa,QAAQC,eAAe,CAAEC,SAAS,WAdtB,2CAAH,sDAiBjB,OACE,qCACA,iCACGnB,GAAYA,EAASoB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,qBAAKC,IAAKrB,OAGZ,uBAAMsB,SAAUpB,EAAhB,UACE,uBAAOqB,MAAOzB,EAAW0B,SAAU,SAACrB,GAAD,OAAOJ,EAAaI,EAAEsB,OAAOF,QAAQG,YAAY,yBACpF,wBAAQC,KAAK,SAAb,wBAMN,SAAST,EAAYU,GACnB,MAA8BA,EAAMT,QAA7BV,EAAP,EAAOA,KAAMH,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,SAEZsB,EAAevB,IAAQ5B,EAAKQ,YAAYoB,IAAM,OAAS,WAC7D,OACE,sBAAKwB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKxB,EAAUyB,IAAI,cACxB,4BAAIvB,OAKKwB,MAxFf,WAEE,MAAsBC,YAAaxD,GAA7ByD,EAAN,oBAEA,OACE,sBAAKL,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC7C,EAAD,MAEF,kCACGkD,EAAe,cAAC/C,EAAD,IAAc,cAACR,EAAD,UC5BtCwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.02c7bd2a.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport {useCollectionData} from 'react-firebase-hooks/firestore'\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n\n  \n})\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n//const analytics = firebase.analytics();\nfunction App() {\n  \n  const[userLoggedIn] = useAuthState(auth);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SignOut/>\n      </header>\n      <section>\n        {userLoggedIn ? <ChatRoom/> : <SignIn/>}\n        </section>\n    </div>\n  );\n}\n\nfunction SignIn(){\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider)\n\n  }\n  return(\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut(){\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const messageRef = firestore.collection('messages')\n  const query = messageRef.orderBy('createdAt').limit(25)\n\n  const [messages] = useCollectionData(query , {idField : 'id'})\n  //console.log(messages)\n  //const [messages] = firestore.collection('messages')\n  const [formValue, setFormValue] = useState('')\n\n  const dummy = useRef();\n  const sendMessage = async(e) => {\n    //console.log('coming here')\n    e.preventDefault();\n    const {uid, photoURL} = auth.currentUser;\n\n    await messageRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('')\n\n    dummy.current.scrollIntoView({ behavior:'smooth'})\n\n  }\n  return(\n    <>\n    <main>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n    \n      <div ref={dummy}></div>\n    </main>\n\n    <form onSubmit={sendMessage}>\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Say something nice!!\"/>\n      <button type=\"submit\">send</button>\n    </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const {text, uid, photoURL} = props.message\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return(\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"user's dp\"/>\n      <p>{text}</p>\n    </div>\n  )\n  \n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}